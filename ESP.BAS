>L.
   10REM ESP#39 04/07/22
   20:
   30@%=5
   40HELP$="F1=CLOSE F2=ABORT F3=R.OFF F4=R.ON"
   50MODE7:PROCtwinit(8)
   60OW%=&FFF1:OB%=&FFF4
   70INPUT"Server? "server%
   80IFserver%>0PRINT"CLIENT"ELSEPRINT"SERVER"
   90PROCtw(2):*FX225 240
  100PROCesp_init(2,50)
  110:
  120:
  130DIM out% 50,in% 50
  140CN%=FNcsock
  150REPEAT:RE%=TRUE:outx%=0:PROCtw(1):CLS:PROCtw(2)
  160IFserver%PROCopen(CN%,100,server%,80,FALSE)ELSEPROCopen(CN%,80,0,0,TRUE)
  170:
  180REPEAT
  190PROCepoll:PROCtimer
  200G%=INKEY(0):G$=CHR$G%
  210IFG%=241PROCclose(CN%)
  220IFG%=242PROCabort(CN%)
  230IFG%=243THENRE%=FALSE:PRINT"DISABLE RECV"
  240IFG%=244THENRE%=TRUE:PRINT"ENABLE RECV"
  250IFG%>0ANDG%<128PROCtestput
  260R%=0:IFRE%THENR%=FNrecv(CN%,in%,20):IFR%>0PROCtestrecv
  270UNTILR%<0ANDFNstatus(CN%)<1
  280IFFNstatus(CN%)=-1PRINT"CN RESET"
  290UNTILserver%>0
  300PROCdsock(CN%):PROCerst
  310END
  320:
  330DEFPROCout:IFG%<32ORG%>126THENPRINT;"<";G%;">";ELSEVDUG%
  340IFG%=13THENPRINT
  350ENDPROC
  360DEFPROCtestput:PROCtw(1):PROCout:PROCtw(2):LOCALR%:?&100=G%:R%=FNsend(CN%,&100,1,G%=13):IFR%<1PRINT"SEND ERROR"
  370ENDPROC
  380DEFPROCtestrecv:PROCtw(1):FORX%=0TOR%-1:G%=X%?in%:PROCout:NEXT:PROCtw(2):ENDPROC
  390:
  400:
  410DEFPROCow(A%,X%):LOCALY%:Y%=X%DIV256:CALLOW%:ENDPROC
  420DEFFNw(A%)=(!A%)AND&FFFF
  430DEFPROCw(A%,V%):?A%=V%:A%?1=V%DIV256:ENDPROC
  440DEFFNbit(V%,X%)=(V%AND2^X%)>0
  450DEFFNc(A%,B%)=CHR$(129+B%)+CHR$(157)+CHR$(129+A%)
  460DEFPROCtwinit(H%):TW%=0:TWH%=H%:TWX%=1:TWY%=1:PRINTTAB(0,H%);FNc(5,2);HELP$:PROCtw(1):ENDPROC
  470DEFPROCtw(W%):IFTW%=W%ENDPROC
  480LOCALX%,Y%,T%,B%:IFW%=1THENT%=0:B%=TWH%-1:ELSET%=TWH%+1:B%=23
  490X%=POS:Y%=VPOS:VDU28,0,B%,39,T%,31,TWX%,TWY%:TWX%=X%:TWY%=Y%:TW%=W%:ENDPROC
  500DEFPROCdump(A%,L%):LOCALX%:FORX%=0TOL%-1:PRINT;X%?L%;" ";:NEXT:PRINT:ENDPROC
  510DEFFNmin(A%,B%):IFA%<B%THEN=A%ELSE=B%
  520DEFFNmax(A%,B%):IFA%<B%THEN=B%ELSE=A%
  530:
  540:
  550DEFPROCesp_init(K%,Z%)
  560MTU%=256:HLEN%=6:MSS%=MTU%-HLEN%:CLOCKG%=100:RTOMAX%=60*CLOCKG%
  570PROCeinit:PROCtcbinit(K%):PROCbbinit(K%*2,Z%):ENDPROC
  580:
  590REM BUFFER ROUTINES
  600DEFPROCbbinit(K%,Z%):BBX%=K%:BBY%=4:DIM BB%(BBX%,BBY%)
  610FORX%=1TOBBX%:DIM B% Z%:BB%(X%,2)=Z%:BB%(X%,3)=B%:PRINT"BB ";X%,~BB%(X%,2),~BB%(X%,3):NEXT:ENDPROC
  620DEFFNbballoc:LOCALX%,B%:FORX%=0TOBBX%:IFNOTBB%(X%,1)B%=X%
  630NEXT:IFB%>0BB%(B%,1)=TRUE:BB%(B%,4)=0
  640=B%
  650DEFPROCbbfree(B%):IFB%=0ENDPROC
  660BB%(B%,1)=FALSE:ENDPROC
  670DEFFNbbcopy(B%,V%,A%,P%,M%):LOCALZ%,G%,O%,L%,X%,Y%:Z%=BB%(B%,2):G%=BB%(B%,3):O%=BB%(B%,4):IFP%>=Z%THEN=0
  680Y%=(O%+P%)MODZ%:L%=Z%-P%:IFL%>M%THENL%=M%
  690FORX%=0TOL%-1:IFV%THENG%?Y%=A%?X%ELSEA%?X%=G%?Y%
  700Y%=(Y%+1)MODZ%:NEXT:=L%
  710DEFPROCbbadorig(B%,X%):BB%(B%,4)=(BB%(B%,4)+X%)MODBB%(B%,2):ENDPROC
  720:
  730REM POPULATE TCB VARIABLES
  740DEFPROCtcbinit(K%):TBX%=K%:TBY%=27:ATB%=0:DIM TB%(TBX%,TBY%):FORX%=1TOTBX%:TB%(X%,1)=-2:NEXT:ENDPROC
  750DATATB%(T%,1),TB%(T%,2),TB%(T%,3),TB%(T%,4),TB%(T%,6),TB%(T%,7),TB%(T%,8),TB%(T%,10),TB%(T%,11),TB%(T%,12),TB%(T%,13),TB%(T%,14),TB%(T%,15),TB%(T%,16),TB%(T%,17),TB%(T%,18),TB%(T%,19),TB%(T%,9),TB%(T%,20),TB%(T%,21),TB%(T%,22)
  760DATATB%(T%,23),TB%(T%,24),TB%(T%,25),TB%(T%,26),TB%(T%,27)
  770DATASTT%,LPORT%,DPORT%,DSTN%,RXB%,TXB%,ISS%,SH%,SO%,SN%,SW%,SWL1%,SWL2%,RN%,RW%,RO%,IRS%,FIN%,RTO%,TM%,RFIN%
  780DATASAMP%,SAMPT%,RTTVAR%,SRTT%,PUSH%
  790DEFPROCldtcb(T%):STT%=0:SO%=0:RO%=0:IFT%=0ENDPROC
  800RESTORE750:READSTT%,LPORT%,DPORT%,DSTN%,RXB%,TXB%,ISS%,SH%,SO%,SN%,SW%,SWL1%,SWL2%,RN%,RW%,RO%,IRS%,FIN%,RTO%,TM%,RFIN%
  810READSAMP%,SAMPT%,RTTVAR%,SRTT%,PUSH%
  820ATB%=T%:ENDPROC
  830DEFPROCsvtcb:IFATB%=0ENDPROC
  840LOCALT%:T%=ATB%:RESTORE770
  850READTB%(T%,1),TB%(T%,2),TB%(T%,3),TB%(T%,4),TB%(T%,6),TB%(T%,7),TB%(T%,8),TB%(T%,10),TB%(T%,11),TB%(T%,12),TB%(T%,13),TB%(T%,14),TB%(T%,15),TB%(T%,16),TB%(T%,17),TB%(T%,18),TB%(T%,19),TB%(T%,9),TB%(T%,20),TB%(T%,21),TB%(T%,22)
  860READTB%(T%,23),TB%(T%,24),TB%(T%,25),TB%(T%,26),TB%(T%,27)
  870STT%=0:ATB%=0:ENDPROC
  880:
  890:
  900REM Econet stuff
  910DEFPROCeinit:RXCB%=0:DIMTXBUF% MTU%,RXBUF% MTU%,CB% 20:PROCerst:ENDPROC
  920:
  930DEFPROCerst:FORX%=3TO17:PROCrxdel2(X%):NEXT:ENDPROC
  940:
  950DEFFNlisten(S%,P%,B%,L%)
  960REMPRINT"LISTEN: S=";S%;" P=";P%;" B=";~B%;" L=";L%
  970LOCALR%
  980?CB%=0:CB%?1=&7F:CB%?2=P%
  990CB%!3=S%:CB%!5=B%:CB%!9=B%+L%
 1000PROCow(&11,CB%)
 1010R%=?CB%:IFR%=0:PRINT"RX#1"
 1020REMPRINT"RX BLK=";R%
 1030=R%
 1040:
 1050DEFFNtransmit(D%,P%,C%,B%,L%)
 1060REMPRINT"TXMIT: D=";D%;" P=";P%;" C=";~C%;" B=";~B%;" L=";L%
 1070LOCALA%,X%
 1080?CB%=C%:CB%?1=P%:CB%!2=D%
 1090CB%!4=B%:CB%!8=B%+L%
 1100PROCow(&10,CB%)
 1110IF?CB%=0:PRINT"TX#1":GOTO1080
 1115=0:REM DON'T WAIT
 1120:
 1130A%=&32:!&70=USR(OB%):X%=?&71
 1140IFX%>=&80:GOTO1130
 1150IFX%<>0:PRINT"TX#2 ";~X%
 1160=X%
 1170:
 1180DEFFNrxpoll(B%)
 1190LOCALA%,X%:IFB%=0:=0
 1200A%=&33:X%=B%:!&70=USR(OB%):=?&71
 1210:
 1220DEFPROCrxread(B%)
 1230LOCALL%,R%,N%,P%,C%
 1240?CB%=B%:PROCow(&11,CB%)
 1250RXS%=FNw(CB%+3):RXP%=CB%?2
 1260RXC%=CB%?1:RXA%=CB%!5:RXL%=CB%!9-RXA%
 1270REMPRINT"RX(";B%;") STN=";RXS%;" LEN=";RXL%;" PORT=";RXP%;" CTRL=";~RXC%;" BUF=";~RXA%
 1280ENDPROC
 1290:
 1300DEFPROCrxdel(X%)
 1310REMPRINT"DEL RX BLK ";X%
 1320DEFPROCrxdel2(X%)
 1330LOCALA%:A%=&34:CALLOB%:ENDPROC
 1340:
 1350DEFPROCepoll
 1360IFFNrxpoll(RXCB%)>127PROCrxread(RXCB%):RXCB%=0:IFRXL%>=6PROCgotseg
 1370IFRXCB%=0THENRXCB%=FNlisten(0,0,RXBUF%,MTU%)
 1380ENDPROC
 1390:
 1400:
 1410DATA CLOSED,LISTEN,SYN-SENT,SYN-RCVD,ESTAB,FIN-WAIT1,FIN-WAIT2,CLOSE-WAIT,CLOSING,LAST-ACK,TIME-WAIT
 1420DEFFNstate(V%):RESTORE1410:LOCALX%,V$:FORX%=0TOV%:READV$:NEXT:=V$
 1430DEFPROCsetstate(V%)
 1440PRINTFNc(2,0);"TCB ";ATB%;" TO ";FNstate(V%):STT%=V%:ENDPROC
 1450:
 1460DATA ACK,RST,SYN,FIN
 1470DEFFNflags(F%):RESTORE1460:LOCALX%,D$,R$:FORX%=6TO3STEP-1:READD$:IFFNbit(F%,X%)THENR$=R$+","+D$
 1480NEXT:=MID$(R$,2)
 1490:
 1500:
 1510DEFFNfindsock(P%,S%)
 1520LOCALT%,X%:FORX%=1TOTBX%:IFTB%(X%,1)>0ANDTB%(X%,2)=P%ANDTB%(X%,4)=S%THENT%=X%
 1530NEXT:=T%
 1540:
 1550REM SEGMENT ARRIVES
 1560REM SEE RFC793 PG65, &RFC1122 PG93
 1570DEFPROCgotseg
 1580LOCALT%:T%=FNfindsock(RXP%,RXS%)
 1590IFT%=0THENT%=FNfindsock(RXP%,0)
 1600PROCldtcb(T%):REM NOTE IF T%=0 THEN STT%=0,SO%=0,& RO%=0
 1610:
 1620LOCALP%,W%,Q%,A%,L%,LT%,FA%,FR%,FS%,FF%
 1630FA%=FNbit(RXC%,6):FR%=FNbit(RXC%,5):FS%=FNbit(RXC%,4):FF%=FNbit(RXC%,3):P%=?RXA%:W%=(RXC%AND7)*256+RXA%?1:Q%=FNw(RXA%+2):A%=FNw(RXA%+4):L%=RXL%-6-FS%-FF%
 1640:
 1650PRINTFNc(6,3);"RXSEG: SST=";RXS%;" SPORT=";P%;" LPORT=";RXP%
 1660PRINT"TCB ";T%;" FLAGS=";FNflags(RXC%)
 1670PRINT" SEQ=";Q%;" ACK=";A%;" WND=";W%;" LEN=";L%
 1680:
 1690Q%=Q%-RO%:A%=A%-SO%
 1700IFSTT%=0GOTO1730
 1710PROCprocseg:PROCsvtcb:ENDPROC
 1720REM *** closed ***
 1730IFNOTFR%PROCsendrst(FA%)
 1740ENDPROC
 1750:
 1760DEFPROCprocseg
 1770IFSTT%>1GOTO1870
 1780REM *** LISTEN ***
 1790IFFR%ENDPROC
 1800IFFA%PROCsendrst(TRUE):ENDPROC
 1810IFNOTFS%ENDPROC
 1820PROCinit:DPORT%=P%:DSTN%=RXS%
 1830PROCirs
 1840PROCsetstate(3):PROCsendseg
 1850ENDPROC
 1860:
 1870IFSTT%>2GOTO2050
 1880REM *** SYN-SENT ***
 1890IFNOTFA%GOTO1920
 1900IFA%<=0ORA%>SN%PRINT"SYN-SENT FIRST CHECK":PROCsendrst(TRUE):ENDPROC
 1910IFFR%THENSTT%=-1:ENDPROC
 1920IFFR%ORNOTFS%ENDPROC
 1930REM THEIR SYN RECEIVED
 1940PROCirs
 1950REM IF ACK THEN 0 < A% <= SN%
 1960REM THEREFORE OUR SYN ACKED
 1970REMIFFA%THENSO%=SO%+1:SN%=SN%-1:TM%=0:PROCsetswnd:PROCsetstate(4):GOTO1950
 1980IFFA%PROCsynacked:GOTO2050
 1990REM ELSE GO SYN-RECV STATE
 2000REM AND ACK THEIR SYN
 2010PROCsetstate(3):PROCsendseg
 2020ENDPROC
 2030:
 2040REM *** OTHERWISE ***
 2050PRINT"OTHERWISE?"
 2060PRINT"SEG  Q=";Q%;" Q+L-1=";Q%+L%-1
 2070REM 1ST CHECK SEQUENCE NUMBER
 2080IFFNtestwin GOTO2130
 2090PRINT"OUT OF WINDOW"
 2100IFNOTFR%PROCsendseg
 2110ENDPROC
 2120:
 2130PRINT"IN WINDOW":PROCtrimseg
 2140PRINT"Q=";Q%;" Q+L-1=";Q%+L%-1;" LT=";LT%;" L=";L%
 2150:
 2160REM 2ND CHECK RST BIT
 2170IFNOTFR%GOTO2220
 2180STT%=-1:PRINT"SEG RESET?!"
 2190ENDPROC
 2200:
 2210REM 4TH CHECK SYN BIT
 2220IFNOTFS%GOTO2270
 2230PRINT"SYN IN WINDOW, RESET!"
 2231REM Just send an ACK, the client
 2232REM should then send a RST, then retry sending a SYN
 2240PROCsendseg:ENDPROC
 2250:
 2260REM 5TH CHECK ACK FIELD
 2270IFNOTFA%ENDPROC
 2280IFSTT%<>3GOTO2350
 2290REM (5TH CHECK) SYN-RCVD
 2300IFNOT(0<=A%ANDA%<=SN%)PROCsendrst(TRUE):ENDPROC
 2310REMPRINT"RECV'D ACK OF OUR SYN"
 2320PROCsynacked
 2330REMPROCsetswnd:PROCsetstate(4)
 2340:
 2350IFSTT%>8GOTO2500
 2360REM (5TH CHECK) ESTAB,...,CLOSING
 2370IFA%>SN%PRINT"INVALID ACK":PROCsendseg:ENDPROC
 2380IFA%<=0PRINT"DUPLICATE ACK":GOTO2550
 2390:
 2400PROCacked
 2410:
 2420REM in addition...
 2430PRINT"IN ADD.. A=";A%;" SN=";SN%
 2440IFSTT%=5ANDA%=SN%PROCsetstate(6)
 2450IFSTT%=6ANDSN%=SH%PRINT"CLOSE ACK"
 2460IFSTT%=8ANDA%=SN%:PROCsetstate(10)
 2470GOTO2550
 2480:
 2490REM (5TH CHECK) LAST ACK/TIME-WAIT
 2500IFSTT%=9ANDA%=SN%PROCsetstate(0)
 2510IFSTT%=10PROCsendseg:PRINT"RESTART TIMER"
 2520ENDPROC
 2530:
 2540REM 7TH, PROCESS SEG DATA
 2550IFSTT%<7PROCdata
 2560:
 2570REM 8TH CHECK FIN BIT
 2580IFNOTFF%GOTO2670
 2590LOCAL NSTT%:NSTT%=STT%
 2600IFSTT%<5THEN NSTT%=7
 2610IFSTT%=5THEN NSTT%=8
 2620IFSTT%=6THEN NSTT%=10
 2630IFNSTT%<>STT%PROCsetstate(NSTT%)
 2640RN%=RN%+1:RFIN%=TRUE:REM ACK FIN
 2650:
 2660REM Do we need to send an ACK and/or data?
 2670IFL%>0ORFNoksend:PROCsendseg
 2680PRINT"END OF SEG PROC"
 2690ENDPROC
 2700:
 2710:
 2720REM NEW ACK RECVD
 2730DEFPROCacked
 2740LOCALAL%:AL%=A%+FIN%:REM NO.OF BYTES IN BUFFER ACKED
 2750PRINT"VALID ACK: A=";A%;" AL=";AL%;" FIN=";FIN%
 2760TM%=0:PRINT"CLEAR TIMEOUT"
 2770PRINT"    SND SO=";SO%;" SN=";SN%;" SH=";SH%;" PUSH=";PUSH%
 2780PROCbbadorig(TXB%,AL%):SO%=SO%+A%:SN%=SN%-A%:SH%=SH%-A%:SWL2%=SWL2%-A%:SAMP%=SAMP%-A%:PUSH%=PUSH%-A%:A%=0:PROCupswnd:PROCrto
 2790PRINT"ADD SND SO=";SO%;" SN=";SN%;" SH=";SH%;" PUSH=";PUSH%
 2800ENDPROC
 2810:
 2820DEFPROCsynacked
 2830SO%=SO%+1:SN%=SN%-1:SAMP%=SAMP%-1:A%=A%-1:TM%=0:PROCsetswnd:PROCsetstate(4):PROCrto
 2840PRINT"RECV'D ACK OF OUR SYN":ENDPROC
 2850:
 2860DEFPROCrto
 2870PRINT"RTT SAMPLE? A=";A%;" SAMP=";SAMP%;" SAMPT=";SAMPT%
 2880IFA%<=SAMP%ORSAMPT%=0PRINT"NO RTT SAMPLE":ENDPROC
 2890LOCALR%:R%=TIME-SAMPT%:SAMPT%=0
 2900PRINT"SAMPLE RTT=";R%
 2910REM RTO CALC AS PER RFC6298
 2920IFSRTT%=0THENRTTVAR%=R%/2:SRTT%=R%:GOTO 2950
 2930RTTVAR%=(3*RTTVAR%+ABS(SRTT%-R%))/4
 2940SRTT%=(7*SRTT%+R%)/8
 2950RTO%=SRTT%+FNmax(CLOCKG%,4*RTTVAR%)
 2960RTO%=FNmin(RTO%,RTOMAX%)
 2970PRINT"RTO=";RTO%;" SRTT=";SRTT%;" RTTVAR=";RTTVAR%
 2980ENDPROC
 2990:
 3000DEFPROCirs:IRS%=Q%:RO%=Q%+1:RN%=0:Q%=-1:PROCtw(1):PRINTFNc(2,5);"INIT ";T%;" IRS=";IRS%:PROCtw(2):ENDPROC
 3010:
 3020REM DELIVER DATA
 3030DEFPROCdata:LOCALPLEN%:PLEN%=L%+FS%+FF%
 3040IFPLEN%=0ENDPROC
 3050PRINT"DATA LTRIM = ";LT%;" PLEN=";PLEN%
 3060LOCALR%:R%=FNbbcopy(RXB%,TRUE,RXBUF%+6+LT%,RN%,L%)
 3070PRINTR%;" BYTES COPIED TO BUFFER!"
 3080RN%=RN%+R%:RW%=RW%-R%
 3090ENDPROC
 3100:
 3110REM UPDATE SEND WINDOW?
 3120DEFPROCupswnd:IF(SWL1%<Q% OR (SWL1%=Q% AND SWL2%<=A%))THENPROCsetswnd
 3130ENDPROC
 3140DEFPROCsetswnd:SW%=W%:SWL1%=Q%:SWL2%=A%:PRINT"UPDATE SND.WND=";SW%:ENDPROC
 3150:
 3160REM IS SEG IN WINDOW?
 3170DEFFNtestwin
 3180IFL%=0ANDRW%=0THEN=Q%=RN%
 3190IFL%>0ANDRW%=0THEN=FALSE
 3200LOCALRE%,QE%:RE%=RN%+RW%:QE%=Q%+L%-1
 3210IFRN%<=Q%ANDQ%<RE%THEN=TRUE
 3220IFL%=0THEN=FALSE
 3230=(RN%<=QE%ANDQE%<RE%)
 3240:
 3250REM TRIM SEG
 3260DEFPROCtrimseg:LOCALX%,Y%
 3270REM LEFT TRIM?
 3280IFQ%>=RN%GOTO3330
 3290PRINT"LEFT TRIM":IFFS%THENFS%=FALSE:Q%=Q%+1:L%=L%-1:PRINT"TRIM SYN":GOTO3280
 3300PRINT"TRIM PAYLOAD":LT%=RN%-Q%:L%=L%-LT%:Q%=RN%
 3310:
 3320REM RIGHT TRIM?
 3330X%=Q%+L%-1:Y%=RN%+RW%:IFX%<Y%ENDPROC
 3340PRINT"RIGHT TRIM":IFNOTFF%THENL%=Y%-Q%:ENDPROC
 3350IFX%=Y%PRINT"NO NEED TO TRIM FIN":ENDPROC
 3360PRINT"TRIM FIN":FF%=FALSE:L%=L%-1:GOTO3330
 3370:
 3380:
 3390:
 3400REM RESET1 = SEQ=0,ACK=SEG.SEQ+SEG.LEN,CTL=RST+ACK
 3410REM RESET2 = SEQ=SEG.ACK,CTL=RST
 3420DEFPROCsendrst(Y%)
 3430LOCALRQ%,RA%,RFA%
 3440IFNOTY%PRINT"RESET1":RA%=RO%+Q%+L%:RFA%=TRUE:ELSEPRINT"RESET2":RQ%=SO%+A%
 3450PROCtxseg(RXS%,P%,RXP%,RQ%,RA%,0,0,RFA%,TRUE,FALSE,FALSE):ENDPROC
 3460:
 3470REM RESET = SEQ=SND.NXT,CTL=RST
 3480DEFPROCsendrst2:PROCtxseg(DSTN%,DPORT%,LPORT%,SO%+SN%,0,0,0,FALSE,TRUE,FALSE,FALSE):ENDPROC
 3490:
 3500DEFPROCsendseg:LOCALW%,PLEN%,FA%,FS%,FF%:FS%=STT%<4:FA%=STT%>2
 3510PRINTFNc(6,5);"sendseg"
 3520:
 3530REM PAYLOAD? W%=remaining window
 3540IFSN%<SH%THENPLEN%=SH%-SN%
 3550IFPLEN%>MSS%THENPLEN%=MSS%
 3560W%=SW%-SN%
 3570REM ZERO WINDOW PROBE?
 3580IFPLEN%>0ANDW%=0ANDNOTFS%THENW%=1
 3590IFW%<PLEN%THENPLEN%=W%
 3600PLEN%=FNbbcopy(TXB%,FALSE,TXBUF%+6,SN%,PLEN%)
 3610PRINT"PAYLOAD LEN=";PLEN%;" (REM.WND=";W%;")"
 3620:
 3630REMPRINT"SEND FIN? SN+PLEN=";SN%+PLEN%;" = SH=";SH%;" ? STATE=";(STT%=5ORSTT%=8ORSTT%=9)
 3640IF(STT%=5ORSTT%=8ORSTT%=9)ANDSN%+PLEN%>=SH%THENFF%=TRUE
 3650PROCtxseg(DSTN%,DPORT%,LPORT%,SO%+SN%,RO%+RN%,RW%,PLEN%,FA%,FALSE,FS%,FF%)
 3660LOCALZ%,Q%:Z%=PLEN%-FS%-FF%:SN%=SN%+Z%
 3670REM SET TIMER IF SEG.LEN>0 (Z%>0)
 3680REM PRINT"SO=";SO%;" SN=";SN%;" SH=";SH%
 3685IFSTT%=10THENTM%=TIME+2*RTO%:ENDPROC
 3690IFZ%=0ENDPROC
 3700TM%=TIME+RTO%:Q%=SN%-1
 3710IFQ%>SAMP%THENSAMP%=Q%:SAMPT%=TIME:PRINT"SAMPLE ";Q%:ELSESAMPT%=0:PRINT"SAMPLE RETX"
 3720ENDPROC
 3730:
 3740DEFPROCtxseg(D%,P%,LP%,Q%,A%,W%,PLEN%,FA%,FR%,FS%,FF%)
 3750LOCALF%:IFFA%THENF%=&40
 3760IFFR%THENF%=F%OR&20
 3770IFFS%THENF%=F%OR&10
 3780IFFF%THENF%=F%OR8
 3790?TXBUF%=LP%:TXBUF%?1=W%:PROCw(TXBUF%+2,Q%):PROCw(TXBUF%+4,A%):F%=F%OR((W%DIV256)AND7)
 3800PRINTFNc(3,2);"TXSEG: DST=";D%;" DPORT=";P%;" LPORT=";LP%
 3810PRINT"FLAGS=";FNflags(F%);" SEQ=";Q%;" ACK=";A%;" WND=";W%;" PLEN=";PLEN%
 3820LOCALR%:R%=FNtransmit(D%,P%,&80ORF%,TXBUF%,PLEN%+HLEN%):ENDPROC
 3830:
 3840:
 3850REM create socket
 3860DEFFNcsock:LOCALB1%,B2%:B1%=FNbballoc:B2%=FNbballoc:IFB1%=0ORB2%=0:PROCbbfree(B1%):PROCbbfree(B2%):PRINT"NO FREE BUFFERS":=0
 3870LOCALT%,X%:FORX%=1TOTBX%:IFTB%(X%,1)=-2:T%=X%
 3880NEXT:IFT%=0:PRINT"NO FREE TCBS":=0
 3890PRINT"NEW TCB = ";T%
 3900PRINT"BUFFERS = ";B1%,B2%
 3910TB%(T%,6)=B1%:TB%(T%,7)=B2%:=T%
 3920:
 3930REM delete socket
 3940DEFPROCdsock(T%):IFT%=0:ENDPROC
 3950IFTB%(T%,1)=-2:ENDPROC
 3960PROCbbfree(TB%(T%,6)):PROCbbfree(TB%(T%,7))
 3970TB%(T%,1)=-2:PRINT"dsock ",T%:ENDPROC
 3980:
 3990DEFPROCclose(T%):IFT%=0ENDPROC
 4000IFFIN%ENDPROC
 4010PRINT"CLOSE TCB ";T%
 4020LOCALNSTT%:PROCldtcb(T%)
 4030IFSTT%<3PROCdsock(T%):ENDPROC
 4040IFSTT%<5THENNSTT%=5
 4050IFSTT%=7THENNSTT%=9
 4060IFNSTT%=0ENDPROC
 4070PROCsetstate(NSTT%)
 4080FIN%=TRUE:PROCsendseg:PROCsvtcb
 4090ENDPROC
 4100:
 4110REM STATUS
 4120DEFFNstatus(T%):IFT%=0THEN=0
 4130=TB%(T%,1)
 4140:
 4150REM open socket
 4160DEFPROCopen(T%,P%,D%,DP%,LSTN%)
 4170PRINT"OPEN sock=";T%;" loc.port=";P%;" dest.stn=";D%;" dest.port=";DP%;" listen=";LSTN%
 4180LOCALX%:FORX%=8TOTBY%:TB%(T%,X%)=0:NEXT
 4190PROCldtcb(T%):LPORT%=P%:DPORT%=DP%:DSTN%=D%:IFNOTLSTN%GOTO4250
 4200:
 4210REM listen
 4220PROCsetstate(1):PROCsvtcb:ENDPROC
 4230:
 4240REM connect
 4250PRINT"connect ",T%
 4260PROCinit:PROCsetstate(2):PROCsendseg:PROCsvtcb:ENDPROC
 4270:
 4280REM init TCB, recv.wnd=buf.size
 4290DEFPROCinit:ISS%=(TIME MOD 1000)*10:SO%=ISS%:SN%=0:SH%=0:RW%=BB%(RXB%,2)
 4300RTO%=1*CLOCKG%:SAMP%=-1
 4310PROCtw(1):PRINTFNc(2,5);"INIT ";T%;" ISS=";ISS%;" RW=";RW%:PROCtw(2):ENDPROC
 4320:
 4330REM Should we send data?
 4340DEFFNoksend:LOCALZ%:Z%=BB%(TXB%,2):=(SN%<PUSH%)ORFIN%OR(SH%>FNmin(Z%/2,MSS%))
 4350:
 4360DEFFNsend(T%,A%,L%,push%):IFT%=0THEN=-1
 4370IFTB%(T%,1)<1THEN=-1
 4380PROCldtcb(T%):IFFIN%THEN=-1
 4390IFDSTN%=0ORDPORT%=0THEN=-1
 4400LOCALR%:R%=FNbbcopy(TXB%,TRUE,A%,SH%,L%):SH%=SH%+R%
 4410IFpush%:PUSH%=SH%:PRINT"PUSH ALL DATA TO ";PUSH%
 4430IFSN%=0ANDFNoksend:PROCsendseg
 4440PROCsvtcb:=R%
 4450:
 4460DEFFNrecv(T%,A%,M%):IFT%=0THEN=-1
 4470REM cnn might be closed but there may still be data in the receive buffer
 4480IFTB%(T%,1)<0THEN=-1
 4490LOCALL%,X%,Z%,R%:RN%=TB%(T%,16)
 4500L%=RN%+RFIN%:IFL%>M%THENL%=M%
 4510IFL%=0GOTO4600
 4520PRINT"RECV: RN=";RN%;" L=";L%;" RFIN=";RFIN%
 4530PROCldtcb(T%):Z%=BB%(RXB%,2)
 4540X%=FNbbcopy(RXB%,FALSE,A%,0,L%)
 4550PROCbbadorig(RXB%,X%):RO%=RO%+X%:RN%=RN%-X%:SWL1%=SWL1%-X%
 4560R%=Z%-RN%-RW%:IFR%>FNmin(Z%/2,MSS%)THENRW%=Z%-RN%:PRINT"UPDATE RECV WINDOW"
 4570PROCsvtcb:=X%
 4580REM IF BUFFER EMPTY AND FIN REC'D
 4590REM RETURN -1
 4600IFRFIN%THEN=-1ELSE=0
 4610:
 4620DEFPROCabort(T%):IFT%=0ENDPROC
 4630PRINT"ABORT ";T%
 4640PROCldtcb(T%)
 4650IFSTT%>2ANDSTT%<8PROCsendrst2
 4660IFSTT%>-2THENTB%(T%,1)=-1
 4670ENDPROC
 4680:
 4690DEFPROCtimer
 4700LOCALT%:FORT%=1TOTBX%
 4710IFTB%(T%,1)>0ANDTB%(T%,21)>0ANDTIME>TB%(T%,21)THENPROCtimeout
 4720NEXT:ENDPROC
 4730:
 4740DEFPROCtimeout:PROCldtcb(T%):TM%=0
 4750PRINT"TIMEOUT ";T%
 4760IFSTT%=10THENPRINT"2MSL TIMEOUT ";T%:STT%=0:GOTO4790
 4770REM retransmit segment
 4780SN%=0:RTO%=FNmin(RTO%*2,RTOMAX%)
 4781PRINT"RETRANSMIT RTO=";RTO%
 4785PROCsendseg
 4790PROCsvtcb:ENDPROC
>*SPOOL
